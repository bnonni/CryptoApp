{
    "swagger": "2.0",
    "info": {
        "version": "v1.1",
        "title": "API Reference",
        "description": "Bittrex provides a simple and powerful API consisting of REST endpoints for transactional operations and a complementary Websocket service providing streaming market, order, and balance updates.\n\n Access to and use of the API is governed by our Terms of Service.\n If you are a user of Bittrex.com, the applicable Terms of Service are available [here](https://support.bittrex.com/hc/en-us/articles/360000560871).\n If you are a user of Bittrex International, the applicable Terms of Service are available [here](https://support.bittrex.com/hc/en-us/articles/360001411486).\n\n If you have any API questions, feedback, or recommendations please post a question via our [Github page](https://github.com/Bittrex/bittrex.github.io/issues)",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "api.bittrex.com",
    "basePath": "/api/v1.1",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "tags": {
        "Public": {
            "name": "Public"
        },
        "Market": {
            "name": "Market"
        },
        "Account": {
            "name": "Account"
        }
    },
    "securityDefinitions": {
        "api_key": {
            "description": "### API Keys\n Authenticating to the Bittrex API requires a valid API Key. API Keys have scoped permissions:\n - __Read Info__ - You can only view the balances, orders, and other details of the account\n - __Withdraw__ - We allow you to programatically withdraw any currency to an address you provide. This can be used to quick arbitrage exchanges or move money into cold storage after thresholds.\n - __Trade Limit__ - This allows the API key to place LIMIT buy and sell orders.\n\n\n If you have [enabled 2FA](https://bittrex.com/Manage?view=2fa) you can check existing or generate new API Keys with the appropriate permissions under [Manage API Keys](https://bittrex.com/Manage?view=api). We strongly recommend minimizing the scope of any given API key to limit the damage done by a leaked key/secret pair.\n\n\n  --- \n\n ### Request Signing\n When required, use the following procedure to sign an API request using a `message` value generated for the REST or Websocket API as detailed below:\n 1. Create a SHA512 HMAC using your API Key secret and the API-specific `message` value.\n 1. Include the resulting hash in your request:\n    - REST: in the `apisign` request header\n    - Websocket: passed to the [`Authenticate`](#method-Authenticate) call\n\n\n #### REST Message\n The `message` value is obtained by concatenating the full request URL including any query-string parameters, your public API Key, and a user-generated nonce (we recommend a UNIX-style timestamp in epoch millisecond format). Below are sample values for the message and secret as well as the HMAC yielded if you've done everything correctly:\n\n ``` markdown\n message: https://api.bittrex.com/api/v1.1/path/call?param=value&apikey=0123456789&nonce=1542020339856\n secret: ABCDEFGHIJ \n hash: FC70DD6467C916FBAA14EB89942644F9CF3F4CBF179923EE677413DC2E1CF2D8C5AA60C85A0A0BB3174960B8AA4FCFB0BC20CDE19BF21D567C671811C52CE631\n```\n\n #### Websocket Message\n\n The `message` value is obtained by calling the Websocket [`GetAuthContext`](#method-GetAuthContext) API. Below are sample values for the message and secret as well as the HMAC yielded if you've done everything correctly.\n``` markdown\n message: top-secret-and-totally-fake\n secret: ABCDEFGHIJ\n hash: 77FF28CAEDCD944F5E6F0F5DD16B1FFDFC7D5A589B7F2DE4CF722F81EE5580652FA3C85D1EDDE9F497F5B6C792A93DBDBFB9E649D3F9FD7AEBC304C41AA68061\n```\n\n",
            "x-spectacle-example": "```javascript\nconst Crypto = require('crypto');\nconst message = 'https://api.bittrex.com/api/v1.1/path/call?param=value&apikey=0123456789&nonce=1542020339856';\nconst secret = 'ABCDEFGHIJ';\nconst signature = Crypto.createHmac('sha512', secret)\n        .update(message)\n        .digest('hex');```"
        }
    },
    "x-spectacle-topics": {
        "Getting Started": {
            "description": "Keep the following in mind when developing against the Bittrex API: \n - [Enable 2FA on your account](https://bittrex.com/Manage?view=2fa). API Keys cannot be generated unless 2FA is enabled.\n - All REST requests must be sent to `https://api.bittrex.com/api/v1.1` using the `application/json` content type. Non-HTTPS requests will be redirected to HTTPS, possibly causing functional or performance issues with your application.\n - All REST requests will result in a `200 Ok` response unless there is a server or infrastructure error. The API result will be wrapped in a JSON [Result](#definition-Result) object, where the `success` field indicates response status.\n - The public REST API (`https://api.bittrex.com/api/v1.1/public`) does not require authentication, all other requests require an [API Key and must be properly signed](#authentication)."
        },
        "Best Practices": {
            "description": "### Call Limits\n The Bittrex API employs call limits on all endpoints to ensure the efficiency and availability of the platform for all customers. In general, API users are permitted to make a maximum of 60 API calls per minute. Calls after the limit will fail, with the limit resetting at the start of the next minute.\n\n __Note: Corporate and high-volume accounts may contact customer support for additional information to ensure that they may continue operating at an optimal level.__\n\n > **Example:** Many users poll the REST API as quickly as possible for updated order data. At very high call rates, the API most often returns the same data because we only update it once per second. By using the Websocket API's [QueryExchangeState](#method-QueryExchangeState) and [SubscribeToExchangeDeltas](#method-SubscribeToExchangeDeltas) functions, developers can maintain their own copies of one or more order books.\n\n --- \n\n ### Socket Connections\n Websocket connections may occasionally need to be recycled. If, for example, you're maintinaing local order book state, and you stop receiving updates even though you know trade activity is occurring, it may be time to resynchronize.\n\n Because v1.1 websocket nonces are server-specific, it's crucial to maintain state on a per-connection basis. For example, to resychronize the BTC-ETH market order book:\n 1. Drop existing websocket connections and flush accumulated data and state (e.g. market nonces).\n 1. Re-establish websocket connection.\n 1. Subscribe to BTC-ETH market deltas, cache received data keyed by nonce.\n 1. Query BTC-ETH market state.\n 1. Apply cached deltas sequentially, starting with nonces greater than that received in step 4.\n"
        }
    },
    "responses": {
        "ResponseSuccessUuid": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/ResponseSuccessUuid"
            }
        }
    },
    "paths": {
        "/public/getmarkets": {
            "get": {
                "operationId": "public_getmarkets",
                "description": "Used to get the open and available trading markets at Bittrex along with other meta data",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getmarkets",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Market"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getcurrencies": {
            "get": {
                "operationId": "public_getcurrencies",
                "description": "Used to get all supported currencies at Bittrex along with other meta data.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getcurrencies",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Currency"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getticker": {
            "get": {
                "operationId": "public_getticker",
                "summary": "",
                "description": "Used to get the current tick values for a market.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [{
                    "name": "market",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the market (ex: BTC-LTC)",
                    "required": true
                }],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getticker?market=BTC-LTC",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MarketTick"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getmarketsummaries": {
            "get": {
                "operationId": "public_getmarketsummaries",
                "summary": "",
                "description": "Used to get the last 24 hour summary of all active markets.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getmarketsummaries",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MarketSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getmarketsummary": {
            "get": {
                "operationId": "public_getmarketsummary",
                "summary": "",
                "description": "Used to get the last 24 hour summary of a specific market.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [{
                    "name": "market",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the market (ex: BTC-LTC)",
                    "required": true
                }],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getmarketsummary?market=btc-ltc",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MarketSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getorderbook": {
            "get": {
                "operationId": "public_getorderbook",
                "summary": "",
                "description": "Used to get retrieve the orderbook for a given market.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [{
                        "name": "market",
                        "type": "string",
                        "in": "query",
                        "description": "a string literal for the market (ex: BTC-LTC)",
                        "required": true
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "in": "query",
                        "description": "`buy`, `sell` or `both` to identify the type of orderbook to return",
                        "required": true
                    }
                ],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getorderbook?market=BTC-LTC&type=both",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrderBook"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/getmarkethistory": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve the latest trades that have occurred for a specific market.",
                "deprecated": false,
                "tags": [
                    "Public"
                ],
                "security": null,
                "parameters": [{
                    "name": "market",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the market (ex: BTC-LTC)",
                    "required": true
                }],
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/public/getmarkethistory?market=BTC-DOGE",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MarketHistoryEntry"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/market/buylimit": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to place a buy order in a specific market. Use buylimit to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work.",
                "deprecated": false,
                "tags": [
                    "Market"
                ],
                "security": null,
                "parameters": [{
                        "name": "market",
                        "type": "string",
                        "in": "query",
                        "description": "a string literal for the market (ex: BTC-LTC)",
                        "required": true
                    },
                    {
                        "name": "quantity",
                        "type": "decimal",
                        "in": "query",
                        "description": "the amount to purchase",
                        "required": true
                    },
                    {
                        "name": "rate",
                        "type": "decimal",
                        "in": "query",
                        "description": "the rate at which to place the order",
                        "required": true
                    }, {
                        "name": "timeInForce",
                        "type": "string",
                        "in": "query",
                        "description": "[IOC ,GTC]",
                        "required": false
                    }
                ],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/market/buylimit?apikey=API_KEY&market=BTC-LTC&quantity=1.2&rate=1.3",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSuccessUuid"
                        }
                    }
                }
            }
        },
        "/market/selllimit": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to place an sell order in a specific market. Use selllimit to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work.",
                "deprecated": false,
                "tags": [
                    "Market"
                ],
                "security": null,
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/market/selllimit?apikey=API_KEY&market=BTC-LTC&quantity=1.2&rate=1.3",
                "parameters": [{
                        "name": "market",
                        "type": "string",
                        "in": "query",
                        "description": "a string literal for the market (ex: BTC-LTC)",
                        "required": true
                    },
                    {
                        "name": "quantity",
                        "type": "decimal",
                        "in": "query",
                        "description": "the amount to purchase",
                        "required": true
                    },
                    {
                        "name": "rate",
                        "type": "decimal",
                        "in": "query",
                        "description": "the rate at which to place the order",
                        "required": true
                    }, {
                        "name": "timeInForce",
                        "type": "string",
                        "in": "query",
                        "description": "[IOC ,GTC]",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSuccessUuid"
                        }
                    }
                }
            }
        },
        "/market/cancel": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to cancel a buy or sell order.",
                "deprecated": false,
                "tags": [
                    "Market"
                ],
                "security": null,
                "parameters": [{
                    "name": "uuid",
                    "type": "string",
                    "in": "query",
                    "description": "uuid of buy or sell order",
                    "required": true
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/market/cancel?apikey=API_KEY&uuid=ORDER_UUID",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSuccessUuid"
                        }
                    }
                }
            }
        },
        "/market/getopenorders": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Get all orders that you currently have opened. A specific market can be requested.",
                "deprecated": false,
                "tags": [
                    "Market"
                ],
                "security": null,
                "parameters": [{
                    "name": "market",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the market (ie. BTC-LTC)",
                    "required": false
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/market/getopenorders?apikey=API_KEY&market=BTC-LTC",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getbalances": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve all balances from your account.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getbalances?apikey=API_KEY",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Balance"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getbalance": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve the balance from your account for a specific currency.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "currency",
                    "type": "string",
                    "in": "query",
                    "required": true,
                    "description": "a string literal for the currency (ie. BTC)"
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getbalance?apikey=API_KEY&currency=BTC",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "$ref": "#/definitions/Balance"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getdepositaddress": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve or generate an address for a specific currency. If one does not exist, the call will fail and return ADDRESS_GENERATING until one is available.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "currency",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the currency (ie. BTC)",
                    "required": true
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getdepositaddress?apikey=API_KEY&currency=BTC",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Address"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/withdraw": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to withdraw funds from your account. _Note: please account for txfee._",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                        "name": "currency",
                        "type": "string",
                        "in": "query",
                        "description": "a string literal for the currency (ie. BTC)",
                        "required": true
                    },
                    {
                        "name": "quantity",
                        "type": "decimal",
                        "in": "query",
                        "description": "the quantity of coins to withdraw",
                        "required": true
                    },
                    {
                        "name": "address",
                        "type": "string",
                        "in": "query",
                        "description": "the address where to send the funds",
                        "required": true
                    },
                    {
                        "name": "paymentid",
                        "type": "string",
                        "in": "query",
                        "description": "used for CryptoNotes/BitShareX/Nxt/XRP and any other coin that has a memo/message/tag/paymentid option",
                        "required": false
                    }
                ],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/withdraw?apikey=API_KEY&currency=EAC&quantity=20.40&address=EAC_ADDRESS",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSuccessUuid"
                        }
                    }
                }
            }
        },
        "/account/getorder": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve a single order by uuid",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "uuid",
                    "type": "string",
                    "in": "query",
                    "description": "the uuid of the buy or sell order",
                    "required": true
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getorder&uuid=0cb4c4e4-bdc7-4e13-8c13-430e587d2cc1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getorderhistory": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve your order history.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "market",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the market (ie. BTC-LTC). If omitted, will return for all markets",
                    "required": false
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getorderhistory",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HistoryEntry"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getwithdrawalhistory": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve your withdrawal history.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "currency",
                    "type": "string",
                    "in": "query",
                    "description": "a string literal for the currency (ie. BTC). If omitted, will return for all currencies",
                    "required": false
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getwithdrawalhistory",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WithdrawalHistoryEntry"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/getdeposithistory": {
            "get": {
                "operationId": "",
                "summary": "",
                "description": "Used to retrieve your deposit history.",
                "deprecated": false,
                "tags": [
                    "Account"
                ],
                "security": null,
                "parameters": [{
                    "name": "currency",
                    "in": "query",
                    "description": "a string literal for the currency (ie. BTC). If omitted, will return for all currencies",
                    "required": false
                }],
                "x-btx-authenticated": true,
                "x-btx-request-example": "https://api.bittrex.com/api/v1.1/account/getdeposithistory?currency=BTC",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "''"
                                },
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DepositHistoryEntry"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "x-btx-methods": {
        "GetAuthContext": {
            "operationId": "GetAuthContext",
            "summary": "",
            "description": "Generates a challenge developers can sign and use in the [`Authenticate`](#method-Authenticate) call to verify their identity and begin receiving account-level notifications.",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [{
                "name": "apiKey",
                "type": "string",
                "in": "",
                "description": "a valid API key for your account",
                "required": true
            }],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "A string of challenge data to be used in [`Authenticate`](#method-Authenticate)",
                    "schema": {
                        "type": "string"
                    }
                }
            }
        },
        "Authenticate": {
            "operationId": "Authenticate",
            "summary": "",
            "description": "Verifies a user's identity to the server and begins receiving account-level notifications. Users must sign the challenge returned by [`GetAuthContext`](#method-GetAuthContext) before calling this function. To receive the account-level notifications enabled by authenticating, the caller must register callbacks for the [`uO`](#definition-Order-Delta---uO) and [`uB`](#definition-Balance-Delta---uB) events through their SignalR client.",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [{
                    "name": "apiKey",
                    "in": "",
                    "description": "a valid API key for your account",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "response",
                    "in": "",
                    "description": "signed challenge from [`GetAuthContext`](#method-GetAuthContext)",
                    "type": "string"
                }
            ],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "Boolean indication of success or failure",
                    "schema": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "Balance Callback": {
                    "description": "",
                    "schema": {
                        "$ref": "#/definitions/Balance Delta - uB"
                    }
                },
                "Order Callback": {
                    "description": "",
                    "schema": {
                        "$ref": "#/definitions/Order Delta - uO"
                    }
                }
            }
        },
        "QueryExchangeState": {
            "operationId": "QueryExchangeState",
            "summary": "",
            "description": "Allows the caller to retrieve the full order book for a specific market.",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [{
                "name": "market",
                "type": "string",
                "in": "",
                "description": "the market identifier (e.g. BTC-ETH)",
                "required": true
            }],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "JSON object containing market state",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "MarketName": {
                                "type": "string"
                            },
                            "Nonce": {
                                "type": "int"
                            },
                            "Buys": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Quantity": {
                                            "type": "decimal"
                                        },
                                        "Rate": {
                                            "type": "decimal"
                                        }
                                    }
                                }
                            },
                            "Sells": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Quantity": {
                                            "type": "decimal"
                                        },
                                        "Rate": {
                                            "type": "decimal"
                                        }
                                    }
                                }
                            },
                            "Fills": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Id": {
                                            "type": "int"
                                        },
                                        "TimeStamp": {
                                            "type": "date"
                                        },
                                        "Quantity": {
                                            "type": "decimal"
                                        },
                                        "Price": {
                                            "type": "decimal"
                                        },
                                        "Total": {
                                            "type": "decimal"
                                        },
                                        "FillType": {
                                            "type": "string"
                                        },
                                        "OrderType": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "QuerySummaryState": {
            "operationId": "QuerySummaryState",
            "summary": "",
            "description": "Allows the caller to retrieve the full state for all markets.",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [{
                "name": "market",
                "type": "string",
                "in": "",
                "description": "the market identifier (e.g. BTC-ETH)",
                "required": true
            }],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "JSON object containing state data for all markets.",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "Nonce": {
                                "type": "int"
                            },
                            "Fills": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "MarketName": {
                                            "type": "string"
                                        },
                                        "High": {
                                            "type": "decimal"
                                        },
                                        "Low": {
                                            "type": "decimal"
                                        },
                                        "Volume": {
                                            "type": "decimal"
                                        },
                                        "Last": {
                                            "type": "decimal"
                                        },
                                        "BaseVolume": {
                                            "type": "decimal"
                                        },
                                        "TimeStamp": {
                                            "type": "date"
                                        },
                                        "Bid": {
                                            "type": "decimal"
                                        },
                                        "Ask": {
                                            "type": "decimal"
                                        },
                                        "OpenBuyOrders": {
                                            "type": "int"
                                        },
                                        "OpenSellOrders": {
                                            "type": "int"
                                        },
                                        "PrevDay": {
                                            "type": "decimal"
                                        },
                                        "Created": {
                                            "type": "date"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "SubscribeToExchangeDeltas": {
            "operationId": "SubscribeToExchangeDeltas",
            "summary": "",
            "description": "Allows the caller to receive real-time updates to the state of a single market. The caller must register a callback for the [`uE`](#definition-Market-Delta---uE) event through their SignalR client. Upon subscribing, the callback will be invoked with market deltas as they occur. \n\n **Note:** _This feed only contains updates to exchange state. To form a complete picture of exchange state, users must first call [`QueryExchangeState`](#method-QueryExchangeState) and merge deltas into the data structure returned in that call._",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [{
                "name": "marketName",
                "type": "string",
                "in": "",
                "description": "the market identifier (e.g. BTC-ETH)",
                "required": true
            }],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "Boolean indicating whether the user was subscribed to the feed",
                    "schema": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "Callback": {
                    "description": "",
                    "schema": {
                        "$ref": "#/definitions/Market Delta - uE"
                    }
                }
            }
        },
        "SubscribeToSummaryDeltas": {
            "operationId": "SubscribeToSummaryDeltas",
            "summary": "",
            "description": "Allows the caller to receive real-time updates to the state of all markets. The caller must register a callback for the [`uS`](#definition-Summary-Delta---uS) event through their SignalR client. Upon subscribing, the callback will be invoked with market deltas as they occur.\n\n **Note:** _Summary delta callbacks are verbose. A subset of the same data limited to the market name, the last price, and the base currency volume can be obtained via [`SubscribeToSummaryLiteDeltas`](#method-SubscribeToSummaryLiteDeltas) just use [`uL`](#definition-Lite-Summary-Delta---uL) instead of [`uS`](#definition-Summary-Delta---uS)._",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "Boolean indicating whether the user was subscribed to the feed.",
                    "schema": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "Callback": {
                    "description": "",
                    "schema": {
                        "$ref": "#/definitions/Summary Delta - uS"
                    }
                }
            }
        },
        "SubscribeToSummaryLiteDeltas": {
            "operationId": "SubscribeToSummaryLiteDeltas",
            "summary": "",
            "description": "Allows the caller to receive real-time updates to the state of all markets. The caller must register a callback for the [`uL`](#definition-Lite-Summary-Delta---uL) event through their SignalR client. Upon subscribing, the callback will be invoked with market deltas as they occur.",
            "deprecated": false,
            "tags": [],
            "security": null,
            "parameters": [],
            "x-btx-request-example": "https://socket.bittrex.com/signalr",
            "responses": {
                "Success": {
                    "description": "Boolean indicating whether the user was subscribed to the feed.",
                    "schema": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "Callback": {
                    "description": "",
                    "schema": {
                        "$ref": "#/definitions/Lite Summary Delta - uL"
                    }
                }
            }
        }
    },
    "definitions": {
        "Result": {
            "description": "The object that wraps an API response, where the `success` field indicates response status.",
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "''"
                },
                "result": {
                    "type": "any"
                }
            }
        },

        "Address": {
            "type": "object",
            "properties": {
                "Currency": {
                    "type": "string",
                    "example": "VTC"
                },
                "Address": {
                    "type": "string",
                    "example": "Vy5SKeKGXUHKS2WVpJ76HYuKAu3URastUo"
                }
            }
        },
        "Balance": {
            "type": "object",
            "properties": {
                "Currency": {
                    "type": "string",
                    "example": "DOGE"
                },
                "Balance": {
                    "format": "double",
                    "type": "number",
                    "example": 4.21549076
                },
                "Available": {
                    "format": "double",
                    "type": "number",
                    "example": 4.21549076
                },
                "Pending": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000000
                },
                "CryptoAddress": {
                    "type": "string",
                    "example": "DLxcEt3AatMyr2NTatzjsfHNoB9NT62HiF"
                },
                "Requested": {
                    "type": "boolean",
                    "example": false
                },
                "Uuid": {
                    "type": "string",
                    "example": null
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "Currency": {
                    "type": "string",
                    "example": "BTC"
                },
                "CurrencyLong": {
                    "type": "string",
                    "example": "Bitcoin"
                },
                "CoinType": {
                    "enum": [
                        "ADA",
                        "ANTSHARES",
                        "BITCOIN",
                        "BITCOIN_STEALTH",
                        "BITSHAREX",
                        "CRYPTO_NOTE_PAYMENTID",
                        "ETH",
                        "ETH_CONTRACT",
                        "FIAT",
                        "LISK",
                        "LUMEN",
                        "NEM",
                        "NXT",
                        "OMNI",
                        "RIPPLE",
                        "STEEM",
                        "TRON",
                        "WAVES",
                        "WAVES_ASSET"
                    ],
                    "type": "string",
                    "example": "BITCOIN"
                },
                "MinConfirmation": {
                    "format": "int32",
                    "type": "integer",
                    "example": 2
                },
                "TxFee": {
                    "format": "double",
                    "type": "number",
                    "example": 0.0020000
                },
                "IsActive": {
                    "type": "boolean",
                    "example": true
                },
                "IsRestricted": {
                    "type": "boolean",
                    "example": false
                },
                "BaseAddress": {
                    "type": "string",
                    "example": null
                }
            }
        },
        "HistoryEntry": {
            "type": "object",
            "properties": {
                "OrderUuid": {
                    "format": "uuid",
                    "type": "string",
                    "example": "fd97d393-e9b9-4dd1-9dbf-f288fc72a185"
                },
                "Exchange": {
                    "type": "string",
                    "example": "BTC-LTC"
                },
                "TimeStamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrderType": {
                    "enum": [
                        "BUY_LIMIT",
                        "SELL_LIMIT"
                    ],
                    "type": "string"
                },
                "Limit": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000001
                },
                "Quantity": {
                    "format": "double",
                    "type": "number",
                    "example": 667.03644955
                },
                "QuantityRemaining": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000000
                },
                "Commission": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00004921
                },
                "Price": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01968424
                },
                "PricePerUnit": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00002950
                },
                "IsConditional": {
                    "type": "boolean",
                    "example": false
                },
                "Condition": {
                    "type": "string",
                    "example": ""
                },
                "ConditionTarget": {
                    "type": "number",
                    "example": 0
                },
                "ImmediateOrCancel": {
                    "type": "boolean",
                    "example": false
                },
                "Closed": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-02-13T00:00:00"
                }
            }
        },
        "Market": {
            "type": "object",
            "properties": {
                "MarketCurrency": {
                    "type": "string",
                    "example": "LTC"
                },
                "BaseCurrency": {
                    "type": "string",
                    "example": "BTC"
                },
                "MarketCurrencyLong": {
                    "type": "string",
                    "example": "Litecoin"
                },
                "BaseCurrencyLong": {
                    "type": "string",
                    "example": "Bitcoin"
                },
                "MinTradeSize": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01000000
                },
                "MarketName": {
                    "type": "string",
                    "example": "BTC-LTC"
                },
                "IsActive": {
                    "type": "boolean",
                    "example": true
                },
                "IsRestricted": {
                    "type": "boolean",
                    "example": false
                },
                "Created": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-02-13T00:00:00"
                },
                "Notice": {
                    "type": "string",
                    "example": "BTC-LTC"
                },
                "IsSponsored": {
                    "type": "boolean",
                    "example": false
                },
                "LogoUrl": {
                    "type": "string",
                    "example": "https://storage.blob.core.windows.net/public/8637ccad-9e7f-45ac-8f03-a41b440e3911.png"
                }
            }
        },
        "MarketTick": {
            "type": "object",
            "properties": {
                "Bid": {
                    "format": "double",
                    "type": "number",
                    "example": 2.05670368
                },
                "Ask": {
                    "format": "double",
                    "type": "number",
                    "example": 3.35579531
                },
                "Last": {
                    "format": "double",
                    "type": "number",
                    "example": 3.35579531
                }
            }
        },
        "MarketSummary": {
            "type": "object",
            "properties": {
                "MarketName": {
                    "type": "string",
                    "example": "BTC-LTC"
                },
                "High": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01350000
                },
                "Low": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01200000
                },
                "Volume": {
                    "format": "double",
                    "type": "number",
                    "example": 3833.97619253
                },
                "Last": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01349998
                },
                "BaseVolume": {
                    "format": "double",
                    "type": "number",
                    "example": 47.03987026
                },
                "TimeStamp": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-07-09T07:22:16.72"
                },
                "Bid": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01271001
                },
                "Ask": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01291100
                },
                "OpenBuyOrders": {
                    "format": "int32",
                    "type": "integer",
                    "example": 45
                },
                "OpenSellOrders": {
                    "format": "int32",
                    "type": "integer",
                    "example": 45
                },
                "PrevDay": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01229501
                },
                "Created": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-02-13T00:00:00"
                },
                "DisplayMarketName": {
                    "type": "string"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "Uuid": {
                    "format": "uuid",
                    "type": "string"
                },
                "OrderUuid": {
                    "format": "uuid",
                    "type": "string",
                    "example": "8925d746-bc9f-4684-b1aa-e507467aaa99"
                },
                "Exchange": {
                    "type": "string",
                    "example": "BTC-LTC"
                },
                "OrderType": {
                    "enum": [
                        "LIMIT_BUY",
                        "LIMIT_SELL"
                    ],
                    "type": "string"
                },
                "Quantity": {
                    "format": "double",
                    "type": "number",
                    "example": 100000.00000000
                },
                "QuantityRemaining": {
                    "format": "double",
                    "type": "number",
                    "example": 100000.00000000
                },
                "Limit": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000001
                },
                "CommissionPaid": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000000
                },
                "Price": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00000000
                },
                "PricePerUnit": {
                    "format": "double",
                    "type": "number",
                    "example": null
                },
                "Opened": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-07-09T03:55:48.583"
                },
                "Closed": {
                    "type": "boolean",
                    "example": null
                },
                "CancelInitiated": {
                    "type": "boolean"
                },
                "ImmediateOrCancel": {
                    "type": "boolean"
                },
                "IsConditional": {
                    "type": "boolean"
                },
                "Condition": {},
                "ConditionTarget": {}
            }
        },
        "OrderBook": {
            "type": "object",
            "properties": {
                "buy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderBookEntry"
                    }
                },
                "sell": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderBookEntry"
                    }
                }
            }
        },
        "OrderBookEntry": {
            "type": "object",
            "properties": {
                "quantity": {
                    "format": "double",
                    "type": "number",
                    "example": 12.37000000
                },
                "rate": {
                    "format": "double",
                    "type": "number",
                    "example": 32.55412402
                }
            }
        },
        "MarketHistoryEntry": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "type": "integer",
                    "example": 319435
                },
                "TimeStamp": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-07-09T03:21:20.08"
                },
                "Quantity": {
                    "format": "double",
                    "type": "number",
                    "example": 0.30802438
                },
                "Price": {
                    "format": "double",
                    "type": "number",
                    "example": 0.01263400
                },
                "Total": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00389158
                },
                "FillType": {
                    "type": "string",
                    "example": "FILL"
                },
                "OrderType": {
                    "type": "string",
                    "example": "BUY"
                }
            }
        },
        "DepositHistoryEntry": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "integer",
                    "type": "number",
                    "example": 1
                },
                "Amount": {
                    "format": "double",
                    "type": "number",
                    "example": 2.12345678
                },
                "Currency": {
                    "type": "string",
                    "example": "BTC"
                },
                "Confirmations": {
                    "type": "number",
                    "example": 2
                },
                "LastUpdated": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-02-13T07:38:53.883"
                },
                "TxId": {
                    "type": "string",
                    "example": "e26d3b33fcfc2cb0c74d0938034956ea590339170bf4102f080eab4b85da9bde"
                },
                "CryptoAddress": {
                    "type": "string",
                    "example": "15VyEAT4uf7ycrNWZVb1eGMzrs21BH95Va"
                }
            }
        },
        "WithdrawalHistoryEntry": {
            "type": "object",
            "properties": {
                "PaymentUuid": {
                    "format": "uuid",
                    "type": "string",
                    "example": "b52c7a5c-90c6-4c6e-835c-e16df12708b1"
                },
                "Currency": {
                    "type": "string",
                    "example": "BTC"
                },
                "Amount": {
                    "format": "double",
                    "type": "number",
                    "example": 17.00000000
                },
                "Address": {
                    "type": "string",
                    "example": "1DeaaFBdbB5nrHj87x3NHS4onvw1GPNyAu"
                },
                "Opened": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2014-07-09T04:24:47.217"
                },
                "Authorized": {
                    "type": "boolean"
                },
                "PendingPayment": {
                    "type": "boolean"
                },
                "TxCost": {
                    "format": "double",
                    "type": "number",
                    "example": 0.00020000
                },
                "TxId": {
                    "type": "string",
                    "example": "b4a575c2a71c7e56d02ab8e26bb1ef0a2f6cf2094f6ca2116476a569c1e84f6e"
                },
                "Canceled": {
                    "type": "boolean"
                },
                "InvalidAddress": {
                    "type": "boolean"
                }
            }
        },
        "ResponseSuccessUuid": {
            "description": "",
            "schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "''"
                    },
                    "result": {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "format": "uuid",
                                "example": "614c34e4-8d71-11e3-94b5-425861b86ab6"
                            }
                        }
                    }
                }
            },
            "example": {
                "success": true,
                "message": "''",
                "result": {
                    "uuid": "614c34e4-8d71-11e3-94b5-425861b86ab6"
                }
            }
        },
        "Balance Delta - uB": {
            "description": "### Callback For\n [`Authenticate`](#method-Authenticate)",
            "schema": {
                "type": "object",
                "properties": {
                    "Nonce": {
                        "type": "int"
                    },
                    "Delta": {
                        "type": "object",
                        "properties": {
                            "Uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "AccountId": {
                                "type": "int"
                            },
                            "Currency": {
                                "type": "string"
                            },
                            "Balance": {
                                "type": "decimal"
                            },
                            "Available": {
                                "type": "decimal"
                            },
                            "Pending": {
                                "type": "decimal"
                            },
                            "CryptoAddress": {
                                "type": "string"
                            },
                            "Requested": {
                                "type": "bool"
                            },
                            "Updated": {
                                "type": "date"
                            },
                            "AutoSell": {
                                "type": "bool"
                            }
                        }
                    }
                }
            }
        },
        "Market Delta - uE": {
            "description": "### Callback For\n [`SubscribeToExchangeDeltas`](#method-SubscribeToExchangeDeltas)\n\n**Note:** The `Type` key can be one of the following values: `0 = ADD`, `1 = REMOVE`, `2 = UPDATE`",
            "schema": {
                "type": "object",
                "properties": {
                    "MarketName": {
                        "type": "string"
                    },
                    "Nonce": {
                        "type": "int"
                    },
                    "Buys": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Type": {
                                    "type": "int"
                                },
                                "Rate": {
                                    "type": "decimal"
                                },
                                "Quantity": {
                                    "type": "decimal"
                                }
                            }
                        }
                    },

                    "Sells": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Type": {
                                    "type": "int"
                                },
                                "Rate": {
                                    "type": "decimal"
                                },
                                "Quantity": {
                                    "type": "decimal"
                                }
                            }
                        }
                    },

                    "Fills": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "FillId": {
                                    "type": "int"
                                },
                                "OrderType": {
                                    "type": "string"
                                },
                                "Rate": {
                                    "type": "decimal"
                                },
                                "Quantity": {
                                    "type": "decimal"
                                },
                                "TimeStamp": {
                                    "type": "date"
                                }
                            }
                        }
                    }
                }
            }
        },

        "Lite Summary Delta - uL": {
            "description": "### Callback For\n [`SubscribeToSummaryLiteDeltas`](#method-SubscribeToSummaryLiteDeltas)",
            "schema": {
                "type": "object",
                "properties": {
                    "Deltas": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "MarketName": {
                                    "type": "string"
                                },
                                "Last": {
                                    "type": "decimal"
                                },
                                "BaseVolume": {
                                    "type": "decimal"
                                },
                                "PrevDay": {
                                    "type": "decimal"
                                }
                            }
                        }
                    }
                }
            }
        },


        "Order Delta - uO": {
            "description": "### Callback For\n [`Authenticate`](#method-Authenticate)\n\n**Note:** The `Type` key can be one of the following values: `0 = OPEN`, `1 = PARTIAL`, `2 = FILL`, `3 = CANCEL`",
            "schema": {
                "type": "object",
                "properties": {
                    "AccountUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "Nonce": {
                        "type": "int"
                    },
                    "Type": {
                        "type": "int"
                    },
                    "Order": {
                        "type": "object",
                        "properties": {
                            "Uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "OrderUuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "Id": {
                                "type": "long"
                            },
                            "Exchange": {
                                "type": "string"
                            },
                            "OrderType": {
                                "type": "string"
                            },
                            "Quantity": {
                                "type": "decimal"
                            },
                            "QuantityRemaining": {
                                "type": "decimal"
                            },
                            "Limit": {
                                "type": "decimal"
                            },
                            "CommissionPaid": {
                                "type": "decimal"
                            },
                            "Price": {
                                "type": "decimal"
                            },
                            "PricePerUnit": {
                                "type": "decimal"
                            },
                            "Opened": {
                                "type": "date"
                            },
                            "Closed": {
                                "type": "date"
                            },
                            "IsOpen": {
                                "type": "bool"
                            },
                            "CancelInitiated": {
                                "type": "bool"
                            },
                            "ImmediateOrCancel": {
                                "type": "bool"
                            },
                            "IsConditional": {
                                "type": "bool"
                            },
                            "Condition": {
                                "type": "string"
                            },
                            "ConditionTarget": {
                                "type": "decimal"
                            },
                            "Updated": {
                                "type": "date"
                            }
                        }
                    }
                }
            }
        },

        "Summary Delta - uS": {
            "description": "### Callback For\n [`SubscribeToSummaryDeltas`](#method-SubscribeToSummaryDeltas)",
            "schema": {
                "type": "object",
                "properties": {
                    "Nonce": {
                        "type": "int"
                    },
                    "Delta": {
                        "type": "object",
                        "properties": {
                            "MarketName": {
                                "type": "string"
                            },
                            "High": {
                                "type": "decimal"
                            },
                            "Low": {
                                "type": "decimal"
                            },
                            "Volume": {
                                "type": "decimal"
                            },
                            "Last": {
                                "type": "decimal"
                            },
                            "BaseVolume": {
                                "type": "decimal"
                            },
                            "TimeStamp": {
                                "type": "date"
                            },
                            "Bid": {
                                "type": "decimal"
                            },
                            "Ask": {
                                "type": "decimal"
                            },
                            "OpenBuyOrders": {
                                "type": "int"
                            },
                            "OpenSellOrders": {
                                "type": "int"
                            },
                            "PrevDay": {
                                "type": "decimal"
                            },
                            "Created": {
                                "type": "date"
                            }
                        }
                    }
                }
            }
        },

        "Minified JSON Keys": {
            "description": "```\n`A` = `Ask`\n`a` = `Available`\n`B` = `Bid`\n`b` = `Balance`\n`C` = `Closed`\n`c` = `Currency`\n`CI` = `CancelInitiated`\n`D` = `Deltas`\n`d` = `Delta`\n`DT` = `OrderDeltaType`\n`E` = `Exchange`\n`e` = `ExchangeDeltaType`\n`F` = `FillType`\n`FI` = `FillId`\n`f` = `Fills`\n`G` = `OpenBuyOrders`\n`g` = `OpenSellOrders`\n`H` = `High`\n`h` = `AutoSell`\n`I` = `Id`\n`i` = `IsOpen`\n`J` = `Condition`\n`j` = `ConditionTarget`\n`K` = `ImmediateOrCancel`\n`k` = `IsConditional`\n`L` = `Low`\n`l` = `Last`\n`M` = `MarketName`\n`m` = `BaseVolume`\n`N` = `Nonce`\n`n` = `CommissionPaid`\n`O` = `Orders`\n`o` = `Order`\n`OT` = `OrderType`\n`OU` = `OrderUuid`\n`P` = `Price`\n`p` = `CryptoAddress`\n`PD` = `PrevDay`\n`PU` = `PricePerUnit`\n`Q` = `Quantity`\n`q` = `QuantityRemaining`\n`R` = `Rate`\n`r` = `Requested`\n`S` = `Sells`\n`s` = `Summaries`\n`T` = `TimeStamp`\n`t` = `Total`\n`TY` = `Type`\n`U` = `Uuid`\n`u` = `Updated`\n`V` = `Volume`\n`W` = `AccountId`\n`w` = `AccountUuid`\n`X` = `Limit`\n`x` = `Created`\n`Y` = `Opened`\n`y` = `State`\n`Z` = `Buys`\n`z` = `Pending`\n```\n"
        }
    }
}